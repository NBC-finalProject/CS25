name: Deploy to EC2

on:
  push:
    branches: [ feat/76 ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # ✅ CI: 테스트만 먼저 수행
      - name: Run tests with H2 (CI only)
        run: ./gradlew clean test -Dspring.profiles.active=test

      # ❌ 테스트 중복 제거용 checkout 제거
      # - name: Checkout
      #   uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: baekjonghyun
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ✅ CD: Docker 빌드에서는 테스트 생략
      - name: Build & Push Docker image
        run: |
          docker build -t baekjonghyun/cs25-app:latest .
          docker push baekjonghyun/cs25-app:latest

      - name: Create .env from secrets
        run: |
          echo "MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "JWT_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "KAKAO_ID=${{ secrets.KAKAO_ID }}" >> .env
          echo "KAKAO_SECRET=${{ secrets.KAKAO_SECRET }}" >> .env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env
          echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}" >> .env
          echo "mysql_host=${{ secrets.MYSQL_HOST }}" >> .env
          echo "redis_host=${{ secrets.REDIS_HOST }}" >> .env

      - name: Upload .env and docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          source: ".env, docker-compose.yml"
          target: "/home/ec2-user/app"

      - name: Run docker-compose on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ec2-user/app
            docker-compose pull
            docker-compose down
            docker-compose up -d
