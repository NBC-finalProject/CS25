package com.example.cs25entity.domain.userQuizAnswer.entity;

import com.example.cs25common.global.entity.BaseEntity;
import com.example.cs25entity.domain.quiz.entity.Quiz;
import com.example.cs25entity.domain.subscription.entity.Subscription;
import com.example.cs25entity.domain.user.entity.User;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

@Getter
@Entity
@Table(name = "userQuizAnswers")
@NoArgsConstructor
public class
UserQuizAnswer extends BaseEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(columnDefinition = "TEXT")
    private String userAnswer;

    @Column(columnDefinition = "TEXT")
    private String aiFeedback;

    private Boolean isCorrect;

    @Nullable
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id")
    private User user;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "quiz_id")
    private Quiz quiz;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "subscription_id")
    private Subscription subscription;

    /**
     * Constructs a UserQuizAnswer entity with the specified properties.
     *
     * @param userAnswer the user's answer text
     * @param aiFeedback feedback generated by AI for the answer
     * @param isCorrect  correctness status of the answer
     * @param user       the user who submitted the answer
     * @param quiz       the quiz to which this answer belongs
     */
    @Builder
    public UserQuizAnswer(String userAnswer, String aiFeedback, Boolean isCorrect, User user,
        Quiz quiz, Subscription subscription) {
        this.userAnswer = userAnswer;
        this.aiFeedback = aiFeedback;
        this.isCorrect = isCorrect;
        this.user = user;
        this.quiz = quiz;
        this.subscription = subscription;
    }

    public void updateIsCorrect(Boolean isCorrect) {
        this.isCorrect = isCorrect;
    }

    public void updateAiFeedback(String aiFeedback) {
        this.aiFeedback = aiFeedback;
    }
}
